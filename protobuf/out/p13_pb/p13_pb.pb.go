// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.0
// source: p13_pb.proto

package p13_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Sc_13001 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChapterList      []*Chapterinfo      `protobuf:"bytes,1,rep,name=chapter_list,json=chapterList" json:"chapter_list,omitempty"`
	CurrentChapter   *Currentchapterinfo `protobuf:"bytes,2,opt,name=current_chapter,json=currentChapter" json:"current_chapter,omitempty"`
	DailyRepairCount *uint32             `protobuf:"varint,3,req,name=daily_repair_count,json=dailyRepairCount" json:"daily_repair_count,omitempty"`
}

func (x *Sc_13001) Reset() {
	*x = Sc_13001{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sc_13001) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sc_13001) ProtoMessage() {}

func (x *Sc_13001) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sc_13001.ProtoReflect.Descriptor instead.
func (*Sc_13001) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{0}
}

func (x *Sc_13001) GetChapterList() []*Chapterinfo {
	if x != nil {
		return x.ChapterList
	}
	return nil
}

func (x *Sc_13001) GetCurrentChapter() *Currentchapterinfo {
	if x != nil {
		return x.CurrentChapter
	}
	return nil
}

func (x *Sc_13001) GetDailyRepairCount() uint32 {
	if x != nil && x.DailyRepairCount != nil {
		return *x.DailyRepairCount
	}
	return 0
}

type Sc_13002 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlashCount     *uint32           `protobuf:"varint,1,req,name=flash_count,json=flashCount" json:"flash_count,omitempty"`
	CollectionList []*Collectioninfo `protobuf:"bytes,2,rep,name=collection_list,json=collectionList" json:"collection_list,omitempty"`
	MaxTeam        *uint32           `protobuf:"varint,3,req,name=max_team,json=maxTeam" json:"max_team,omitempty"`
}

func (x *Sc_13002) Reset() {
	*x = Sc_13002{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sc_13002) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sc_13002) ProtoMessage() {}

func (x *Sc_13002) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sc_13002.ProtoReflect.Descriptor instead.
func (*Sc_13002) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{1}
}

func (x *Sc_13002) GetFlashCount() uint32 {
	if x != nil && x.FlashCount != nil {
		return *x.FlashCount
	}
	return 0
}

func (x *Sc_13002) GetCollectionList() []*Collectioninfo {
	if x != nil {
		return x.CollectionList
	}
	return nil
}

func (x *Sc_13002) GetMaxTeam() uint32 {
	if x != nil && x.MaxTeam != nil {
		return *x.MaxTeam
	}
	return 0
}

type Cs_13003 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *uint32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	ShipIdList []uint32 `protobuf:"varint,2,rep,name=ship_id_list,json=shipIdList" json:"ship_id_list,omitempty"`
}

func (x *Cs_13003) Reset() {
	*x = Cs_13003{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cs_13003) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cs_13003) ProtoMessage() {}

func (x *Cs_13003) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cs_13003.ProtoReflect.Descriptor instead.
func (*Cs_13003) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{2}
}

func (x *Cs_13003) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Cs_13003) GetShipIdList() []uint32 {
	if x != nil {
		return x.ShipIdList
	}
	return nil
}

type Sc_13004 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *uint32 `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
}

func (x *Sc_13004) Reset() {
	*x = Sc_13004{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sc_13004) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sc_13004) ProtoMessage() {}

func (x *Sc_13004) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sc_13004.ProtoReflect.Descriptor instead.
func (*Sc_13004) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{3}
}

func (x *Sc_13004) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

type Cs_13005 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
}

func (x *Cs_13005) Reset() {
	*x = Cs_13005{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cs_13005) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cs_13005) ProtoMessage() {}

func (x *Cs_13005) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cs_13005.ProtoReflect.Descriptor instead.
func (*Cs_13005) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{4}
}

func (x *Cs_13005) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

type Sc_13006 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result        *uint32           `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	Exp           *uint32           `protobuf:"varint,2,req,name=exp" json:"exp,omitempty"`
	DropList      []*Iteminfo       `protobuf:"bytes,3,rep,name=drop_list,json=dropList" json:"drop_list,omitempty"`
	NewCollection []*Collectioninfo `protobuf:"bytes,4,rep,name=new_collection,json=newCollection" json:"new_collection,omitempty"`
	IsCri         *uint32           `protobuf:"varint,5,req,name=is_cri,json=isCri" json:"is_cri,omitempty"`
}

func (x *Sc_13006) Reset() {
	*x = Sc_13006{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sc_13006) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sc_13006) ProtoMessage() {}

func (x *Sc_13006) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sc_13006.ProtoReflect.Descriptor instead.
func (*Sc_13006) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{5}
}

func (x *Sc_13006) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *Sc_13006) GetExp() uint32 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return 0
}

func (x *Sc_13006) GetDropList() []*Iteminfo {
	if x != nil {
		return x.DropList
	}
	return nil
}

func (x *Sc_13006) GetNewCollection() []*Collectioninfo {
	if x != nil {
		return x.NewCollection
	}
	return nil
}

func (x *Sc_13006) GetIsCri() uint32 {
	if x != nil && x.IsCri != nil {
		return *x.IsCri
	}
	return 0
}

type Cs_13007 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
}

func (x *Cs_13007) Reset() {
	*x = Cs_13007{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cs_13007) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cs_13007) ProtoMessage() {}

func (x *Cs_13007) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cs_13007.ProtoReflect.Descriptor instead.
func (*Cs_13007) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{6}
}

func (x *Cs_13007) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

type Sc_13008 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *uint32 `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
}

func (x *Sc_13008) Reset() {
	*x = Sc_13008{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sc_13008) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sc_13008) ProtoMessage() {}

func (x *Sc_13008) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sc_13008.ProtoReflect.Descriptor instead.
func (*Sc_13008) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{7}
}

func (x *Sc_13008) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

type Sc_13011 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection *Collectioninfo `protobuf:"bytes,1,req,name=collection" json:"collection,omitempty"`
}

func (x *Sc_13011) Reset() {
	*x = Sc_13011{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sc_13011) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sc_13011) ProtoMessage() {}

func (x *Sc_13011) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sc_13011.ProtoReflect.Descriptor instead.
func (*Sc_13011) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{8}
}

func (x *Sc_13011) GetCollection() *Collectioninfo {
	if x != nil {
		return x.Collection
	}
	return nil
}

type Collectioninfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *uint32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	FinishTime *uint32  `protobuf:"varint,2,req,name=finish_time,json=finishTime" json:"finish_time,omitempty"`
	OverTime   *uint32  `protobuf:"varint,3,req,name=over_time,json=overTime" json:"over_time,omitempty"`
	ShipIdList []uint32 `protobuf:"varint,4,rep,name=ship_id_list,json=shipIdList" json:"ship_id_list,omitempty"`
}

func (x *Collectioninfo) Reset() {
	*x = Collectioninfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collectioninfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collectioninfo) ProtoMessage() {}

func (x *Collectioninfo) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collectioninfo.ProtoReflect.Descriptor instead.
func (*Collectioninfo) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{9}
}

func (x *Collectioninfo) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Collectioninfo) GetFinishTime() uint32 {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return 0
}

func (x *Collectioninfo) GetOverTime() uint32 {
	if x != nil && x.OverTime != nil {
		return *x.OverTime
	}
	return 0
}

func (x *Collectioninfo) GetShipIdList() []uint32 {
	if x != nil {
		return x.ShipIdList
	}
	return nil
}

type Iteminfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *uint32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Id   *uint32 `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	Num  *uint32 `protobuf:"varint,3,req,name=num" json:"num,omitempty"`
}

func (x *Iteminfo) Reset() {
	*x = Iteminfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Iteminfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Iteminfo) ProtoMessage() {}

func (x *Iteminfo) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Iteminfo.ProtoReflect.Descriptor instead.
func (*Iteminfo) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{10}
}

func (x *Iteminfo) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *Iteminfo) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Iteminfo) GetNum() uint32 {
	if x != nil && x.Num != nil {
		return *x.Num
	}
	return 0
}

type Cs_13101 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *uint32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	GroupIdList []uint32 `protobuf:"varint,2,rep,name=group_id_list,json=groupIdList" json:"group_id_list,omitempty"`
}

func (x *Cs_13101) Reset() {
	*x = Cs_13101{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cs_13101) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cs_13101) ProtoMessage() {}

func (x *Cs_13101) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cs_13101.ProtoReflect.Descriptor instead.
func (*Cs_13101) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{11}
}

func (x *Cs_13101) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Cs_13101) GetGroupIdList() []uint32 {
	if x != nil {
		return x.GroupIdList
	}
	return nil
}

type Sc_13102 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result         *uint32             `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	CurrentChapter *Currentchapterinfo `protobuf:"bytes,2,opt,name=current_chapter,json=currentChapter" json:"current_chapter,omitempty"`
}

func (x *Sc_13102) Reset() {
	*x = Sc_13102{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sc_13102) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sc_13102) ProtoMessage() {}

func (x *Sc_13102) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sc_13102.ProtoReflect.Descriptor instead.
func (*Sc_13102) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{12}
}

func (x *Sc_13102) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *Sc_13102) GetCurrentChapter() *Currentchapterinfo {
	if x != nil {
		return x.CurrentChapter
	}
	return nil
}

type Cs_13103 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Act      *uint32 `protobuf:"varint,1,req,name=act" json:"act,omitempty"`
	GroupId  *uint32 `protobuf:"varint,2,req,name=group_id,json=groupId" json:"group_id,omitempty"`
	ActArg_1 *uint32 `protobuf:"varint,3,opt,name=act_arg_1,json=actArg1" json:"act_arg_1,omitempty"`
	ActArg_2 *uint32 `protobuf:"varint,4,opt,name=act_arg_2,json=actArg2" json:"act_arg_2,omitempty"`
}

func (x *Cs_13103) Reset() {
	*x = Cs_13103{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cs_13103) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cs_13103) ProtoMessage() {}

func (x *Cs_13103) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cs_13103.ProtoReflect.Descriptor instead.
func (*Cs_13103) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{13}
}

func (x *Cs_13103) GetAct() uint32 {
	if x != nil && x.Act != nil {
		return *x.Act
	}
	return 0
}

func (x *Cs_13103) GetGroupId() uint32 {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return 0
}

func (x *Cs_13103) GetActArg_1() uint32 {
	if x != nil && x.ActArg_1 != nil {
		return *x.ActArg_1
	}
	return 0
}

func (x *Cs_13103) GetActArg_2() uint32 {
	if x != nil && x.ActArg_2 != nil {
		return *x.ActArg_2
	}
	return 0
}

type Sc_13104 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result     *uint32            `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	MovePath   []*Chaptercellpos  `protobuf:"bytes,2,rep,name=move_path,json=movePath" json:"move_path,omitempty"`
	DropList   []*Dropinfo        `protobuf:"bytes,3,rep,name=drop_list,json=dropList" json:"drop_list,omitempty"`
	MapUpdate  []*Chaptercellinfo `protobuf:"bytes,4,rep,name=map_update,json=mapUpdate" json:"map_update,omitempty"`
	ShipUpdate []*Shipinchapter   `protobuf:"bytes,5,rep,name=ship_update,json=shipUpdate" json:"ship_update,omitempty"`
}

func (x *Sc_13104) Reset() {
	*x = Sc_13104{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sc_13104) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sc_13104) ProtoMessage() {}

func (x *Sc_13104) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sc_13104.ProtoReflect.Descriptor instead.
func (*Sc_13104) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{14}
}

func (x *Sc_13104) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *Sc_13104) GetMovePath() []*Chaptercellpos {
	if x != nil {
		return x.MovePath
	}
	return nil
}

func (x *Sc_13104) GetDropList() []*Dropinfo {
	if x != nil {
		return x.DropList
	}
	return nil
}

func (x *Sc_13104) GetMapUpdate() []*Chaptercellinfo {
	if x != nil {
		return x.MapUpdate
	}
	return nil
}

func (x *Sc_13104) GetShipUpdate() []*Shipinchapter {
	if x != nil {
		return x.ShipUpdate
	}
	return nil
}

type Sc_13105 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapUpdate []*Chaptercellinfo `protobuf:"bytes,1,rep,name=map_update,json=mapUpdate" json:"map_update,omitempty"`
}

func (x *Sc_13105) Reset() {
	*x = Sc_13105{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sc_13105) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sc_13105) ProtoMessage() {}

func (x *Sc_13105) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sc_13105.ProtoReflect.Descriptor instead.
func (*Sc_13105) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{15}
}

func (x *Sc_13105) GetMapUpdate() []*Chaptercellinfo {
	if x != nil {
		return x.MapUpdate
	}
	return nil
}

type Chapterinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *uint32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Progress       *uint32  `protobuf:"varint,2,req,name=progress" json:"progress,omitempty"`
	KillBossCount  *uint32  `protobuf:"varint,3,req,name=kill_boss_count,json=killBossCount" json:"kill_boss_count,omitempty"`
	KillEnemyCount *uint32  `protobuf:"varint,4,req,name=kill_enemy_count,json=killEnemyCount" json:"kill_enemy_count,omitempty"`
	TakeBoxCount   *uint32  `protobuf:"varint,5,req,name=take_box_count,json=takeBoxCount" json:"take_box_count,omitempty"`
	DropShipId     []uint32 `protobuf:"varint,6,rep,name=drop_ship_id,json=dropShipId" json:"drop_ship_id,omitempty"`
}

func (x *Chapterinfo) Reset() {
	*x = Chapterinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chapterinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chapterinfo) ProtoMessage() {}

func (x *Chapterinfo) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chapterinfo.ProtoReflect.Descriptor instead.
func (*Chapterinfo) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{16}
}

func (x *Chapterinfo) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Chapterinfo) GetProgress() uint32 {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return 0
}

func (x *Chapterinfo) GetKillBossCount() uint32 {
	if x != nil && x.KillBossCount != nil {
		return *x.KillBossCount
	}
	return 0
}

func (x *Chapterinfo) GetKillEnemyCount() uint32 {
	if x != nil && x.KillEnemyCount != nil {
		return *x.KillEnemyCount
	}
	return 0
}

func (x *Chapterinfo) GetTakeBoxCount() uint32 {
	if x != nil && x.TakeBoxCount != nil {
		return *x.TakeBoxCount
	}
	return 0
}

func (x *Chapterinfo) GetDropShipId() []uint32 {
	if x != nil {
		return x.DropShipId
	}
	return nil
}

type Currentchapterinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *uint32            `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Time      *uint32            `protobuf:"varint,2,req,name=time" json:"time,omitempty"`
	CellList  []*Chaptercellinfo `protobuf:"bytes,3,rep,name=cell_list,json=cellList" json:"cell_list,omitempty"`
	GroupList []*Groupinchapter  `protobuf:"bytes,4,rep,name=group_list,json=groupList" json:"group_list,omitempty"`
}

func (x *Currentchapterinfo) Reset() {
	*x = Currentchapterinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Currentchapterinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Currentchapterinfo) ProtoMessage() {}

func (x *Currentchapterinfo) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Currentchapterinfo.ProtoReflect.Descriptor instead.
func (*Currentchapterinfo) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{17}
}

func (x *Currentchapterinfo) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Currentchapterinfo) GetTime() uint32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *Currentchapterinfo) GetCellList() []*Chaptercellinfo {
	if x != nil {
		return x.CellList
	}
	return nil
}

func (x *Currentchapterinfo) GetGroupList() []*Groupinchapter {
	if x != nil {
		return x.GroupList
	}
	return nil
}

type Chaptercellinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos      *Chaptercellpos `protobuf:"bytes,1,req,name=pos" json:"pos,omitempty"`
	ItemType *uint32         `protobuf:"varint,2,req,name=item_type,json=itemType" json:"item_type,omitempty"`
	ItemId   *uint32         `protobuf:"varint,3,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	ItemFlag *uint32         `protobuf:"varint,4,opt,name=item_flag,json=itemFlag" json:"item_flag,omitempty"`
}

func (x *Chaptercellinfo) Reset() {
	*x = Chaptercellinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chaptercellinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chaptercellinfo) ProtoMessage() {}

func (x *Chaptercellinfo) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chaptercellinfo.ProtoReflect.Descriptor instead.
func (*Chaptercellinfo) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{18}
}

func (x *Chaptercellinfo) GetPos() *Chaptercellpos {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *Chaptercellinfo) GetItemType() uint32 {
	if x != nil && x.ItemType != nil {
		return *x.ItemType
	}
	return 0
}

func (x *Chaptercellinfo) GetItemId() uint32 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *Chaptercellinfo) GetItemFlag() uint32 {
	if x != nil && x.ItemFlag != nil {
		return *x.ItemFlag
	}
	return 0
}

type Chaptercellpos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Row    *uint32 `protobuf:"varint,1,req,name=row" json:"row,omitempty"`
	Column *uint32 `protobuf:"varint,2,req,name=column" json:"column,omitempty"`
}

func (x *Chaptercellpos) Reset() {
	*x = Chaptercellpos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chaptercellpos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chaptercellpos) ProtoMessage() {}

func (x *Chaptercellpos) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chaptercellpos.ProtoReflect.Descriptor instead.
func (*Chaptercellpos) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{19}
}

func (x *Chaptercellpos) GetRow() uint32 {
	if x != nil && x.Row != nil {
		return *x.Row
	}
	return 0
}

func (x *Chaptercellpos) GetColumn() uint32 {
	if x != nil && x.Column != nil {
		return *x.Column
	}
	return 0
}

type Dropinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   *uint32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Id     *uint32 `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	Number *uint32 `protobuf:"varint,3,req,name=number" json:"number,omitempty"`
}

func (x *Dropinfo) Reset() {
	*x = Dropinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dropinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dropinfo) ProtoMessage() {}

func (x *Dropinfo) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dropinfo.ProtoReflect.Descriptor instead.
func (*Dropinfo) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{20}
}

func (x *Dropinfo) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *Dropinfo) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Dropinfo) GetNumber() uint32 {
	if x != nil && x.Number != nil {
		return *x.Number
	}
	return 0
}

type Groupinchapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              *uint32          `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	ShipList        []*Shipinchapter `protobuf:"bytes,2,rep,name=ship_list,json=shipList" json:"ship_list,omitempty"`
	Pos             *Chaptercellpos  `protobuf:"bytes,3,req,name=pos" json:"pos,omitempty"`
	StepCount       *uint32          `protobuf:"varint,4,req,name=step_count,json=stepCount" json:"step_count,omitempty"`
	StrategyList    []*Strategyinfo  `protobuf:"bytes,5,rep,name=strategy_list,json=strategyList" json:"strategy_list,omitempty"`
	StrategyUseList []*Strategyinfo  `protobuf:"bytes,6,rep,name=strategy_use_list,json=strategyUseList" json:"strategy_use_list,omitempty"`
	StrategyId      *uint32          `protobuf:"varint,7,req,name=strategy_id,json=strategyId" json:"strategy_id,omitempty"`
	Bullet          *uint32          `protobuf:"varint,8,req,name=bullet" json:"bullet,omitempty"`
}

func (x *Groupinchapter) Reset() {
	*x = Groupinchapter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Groupinchapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Groupinchapter) ProtoMessage() {}

func (x *Groupinchapter) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Groupinchapter.ProtoReflect.Descriptor instead.
func (*Groupinchapter) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{21}
}

func (x *Groupinchapter) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Groupinchapter) GetShipList() []*Shipinchapter {
	if x != nil {
		return x.ShipList
	}
	return nil
}

func (x *Groupinchapter) GetPos() *Chaptercellpos {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *Groupinchapter) GetStepCount() uint32 {
	if x != nil && x.StepCount != nil {
		return *x.StepCount
	}
	return 0
}

func (x *Groupinchapter) GetStrategyList() []*Strategyinfo {
	if x != nil {
		return x.StrategyList
	}
	return nil
}

func (x *Groupinchapter) GetStrategyUseList() []*Strategyinfo {
	if x != nil {
		return x.StrategyUseList
	}
	return nil
}

func (x *Groupinchapter) GetStrategyId() uint32 {
	if x != nil && x.StrategyId != nil {
		return *x.StrategyId
	}
	return 0
}

func (x *Groupinchapter) GetBullet() uint32 {
	if x != nil && x.Bullet != nil {
		return *x.Bullet
	}
	return 0
}

type Shipinchapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	HpRant *uint32 `protobuf:"varint,2,req,name=hp_rant,json=hpRant" json:"hp_rant,omitempty"`
}

func (x *Shipinchapter) Reset() {
	*x = Shipinchapter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shipinchapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shipinchapter) ProtoMessage() {}

func (x *Shipinchapter) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shipinchapter.ProtoReflect.Descriptor instead.
func (*Shipinchapter) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{22}
}

func (x *Shipinchapter) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Shipinchapter) GetHpRant() uint32 {
	if x != nil && x.HpRant != nil {
		return *x.HpRant
	}
	return 0
}

type Strategyinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Count *uint32 `protobuf:"varint,3,req,name=count" json:"count,omitempty"`
}

func (x *Strategyinfo) Reset() {
	*x = Strategyinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Strategyinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Strategyinfo) ProtoMessage() {}

func (x *Strategyinfo) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Strategyinfo.ProtoReflect.Descriptor instead.
func (*Strategyinfo) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{23}
}

func (x *Strategyinfo) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Strategyinfo) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type Sc_13201 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountList []*ExpeditionDailyCount `protobuf:"bytes,1,rep,name=count_list,json=countList" json:"count_list,omitempty"`
}

func (x *Sc_13201) Reset() {
	*x = Sc_13201{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sc_13201) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sc_13201) ProtoMessage() {}

func (x *Sc_13201) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sc_13201.ProtoReflect.Descriptor instead.
func (*Sc_13201) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{24}
}

func (x *Sc_13201) GetCountList() []*ExpeditionDailyCount {
	if x != nil {
		return x.CountList
	}
	return nil
}

type ExpeditionDailyCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Count *uint32 `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
}

func (x *ExpeditionDailyCount) Reset() {
	*x = ExpeditionDailyCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p13_pb_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpeditionDailyCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpeditionDailyCount) ProtoMessage() {}

func (x *ExpeditionDailyCount) ProtoReflect() protoreflect.Message {
	mi := &file_p13_pb_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpeditionDailyCount.ProtoReflect.Descriptor instead.
func (*ExpeditionDailyCount) Descriptor() ([]byte, []int) {
	return file_p13_pb_proto_rawDescGZIP(), []int{25}
}

func (x *ExpeditionDailyCount) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ExpeditionDailyCount) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

var File_p13_pb_proto protoreflect.FileDescriptor

var file_p13_pb_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x31, 0x33, 0x5f, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f,
	0x61, 0x7a, 0x75, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x31, 0x33, 0x5f, 0x70, 0x62, 0x22,
	0xc7, 0x01, 0x0a, 0x08, 0x73, 0x63, 0x5f, 0x31, 0x33, 0x30, 0x30, 0x31, 0x12, 0x3f, 0x0a, 0x0c,
	0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x31,
	0x33, 0x5f, 0x70, 0x62, 0x2e, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4c, 0x0a,
	0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x6c, 0x61, 0x6e,
	0x65, 0x2e, 0x70, 0x31, 0x33, 0x5f, 0x70, 0x62, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x64,
	0x61, 0x69, 0x6c, 0x79, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x10, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65,
	0x70, 0x61, 0x69, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x08, 0x73, 0x63,
	0x5f, 0x31, 0x33, 0x30, 0x30, 0x32, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x6c, 0x61,
	0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x31, 0x33, 0x5f,
	0x70, 0x62, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x66,
	0x6f, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x54, 0x65, 0x61, 0x6d, 0x22, 0x3c, 0x0a, 0x08,
	0x63, 0x73, 0x5f, 0x31, 0x33, 0x30, 0x30, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x68, 0x69, 0x70,
	0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a,
	0x73, 0x68, 0x69, 0x70, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x22, 0x0a, 0x08, 0x73, 0x63,
	0x5f, 0x31, 0x33, 0x30, 0x30, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1a,
	0x0a, 0x08, 0x63, 0x73, 0x5f, 0x31, 0x33, 0x30, 0x30, 0x35, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0xcb, 0x01, 0x0a, 0x08, 0x73,
	0x63, 0x5f, 0x31, 0x33, 0x30, 0x30, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x78,
	0x70, 0x12, 0x36, 0x0a, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2e,
	0x70, 0x31, 0x33, 0x5f, 0x70, 0x62, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x64, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0e, 0x6e, 0x65, 0x77,
	0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x31, 0x33,
	0x5f, 0x70, 0x62, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e,
	0x66, 0x6f, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x63, 0x72, 0x69, 0x18, 0x05, 0x20, 0x02, 0x28,
	0x0d, 0x52, 0x05, 0x69, 0x73, 0x43, 0x72, 0x69, 0x22, 0x1a, 0x0a, 0x08, 0x63, 0x73, 0x5f, 0x31,
	0x33, 0x30, 0x30, 0x37, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x08, 0x73, 0x63, 0x5f, 0x31, 0x33, 0x30, 0x30, 0x38,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4b, 0x0a, 0x08, 0x73, 0x63, 0x5f, 0x31,
	0x33, 0x30, 0x31, 0x31, 0x12, 0x3f, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x6c,
	0x61, 0x6e, 0x65, 0x2e, 0x70, 0x31, 0x33, 0x5f, 0x70, 0x62, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x80, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0a, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x76, 0x65,
	0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x76,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x68,
	0x69, 0x70, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x40, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x3e, 0x0a, 0x08, 0x63, 0x73,
	0x5f, 0x31, 0x33, 0x31, 0x30, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x70, 0x0a, 0x08, 0x73, 0x63,
	0x5f, 0x31, 0x33, 0x31, 0x30, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4c,
	0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x6c, 0x61,
	0x6e, 0x65, 0x2e, 0x70, 0x31, 0x33, 0x5f, 0x70, 0x62, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x22, 0x6f, 0x0a, 0x08,
	0x63, 0x73, 0x5f, 0x31, 0x33, 0x31, 0x30, 0x33, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x72, 0x67,
	0x5f, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x63, 0x74, 0x41, 0x72, 0x67,
	0x31, 0x12, 0x1a, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x72, 0x67, 0x5f, 0x32, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x63, 0x74, 0x41, 0x72, 0x67, 0x32, 0x22, 0x9a, 0x02,
	0x0a, 0x08, 0x73, 0x63, 0x5f, 0x31, 0x33, 0x31, 0x30, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x3c, 0x0a, 0x09, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x70, 0x31, 0x33, 0x5f, 0x70, 0x62, 0x2e, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x63,
	0x65, 0x6c, 0x6c, 0x70, 0x6f, 0x73, 0x52, 0x08, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x36, 0x0a, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70,
	0x31, 0x33, 0x5f, 0x70, 0x62, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x64, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0a, 0x6d, 0x61, 0x70, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61,
	0x7a, 0x75, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x31, 0x33, 0x5f, 0x70, 0x62, 0x2e, 0x63,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x63, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x6d, 0x61, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x73, 0x68, 0x69,
	0x70, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x61, 0x7a, 0x75, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x31, 0x33, 0x5f, 0x70, 0x62,
	0x2e, 0x73, 0x68, 0x69, 0x70, 0x69, 0x6e, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x0a,
	0x73, 0x68, 0x69, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x4b, 0x0a, 0x08, 0x73, 0x63,
	0x5f, 0x31, 0x33, 0x31, 0x30, 0x35, 0x12, 0x3f, 0x0a, 0x0a, 0x6d, 0x61, 0x70, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x7a, 0x75,
	0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x31, 0x33, 0x5f, 0x70, 0x62, 0x2e, 0x63, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x63, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6d, 0x61,
	0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0xd3, 0x01, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x62, 0x6f, 0x73, 0x73,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0d, 0x6b, 0x69,
	0x6c, 0x6c, 0x42, 0x6f, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6b,
	0x69, 0x6c, 0x6c, 0x5f, 0x65, 0x6e, 0x65, 0x6d, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0e, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x6e, 0x65, 0x6d, 0x79,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x62, 0x6f,
	0x78, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0c, 0x74,
	0x61, 0x6b, 0x65, 0x42, 0x6f, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x64,
	0x72, 0x6f, 0x70, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0a, 0x64, 0x72, 0x6f, 0x70, 0x53, 0x68, 0x69, 0x70, 0x49, 0x64, 0x22, 0xb7, 0x01,
	0x0a, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x63, 0x65, 0x6c, 0x6c,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x7a,
	0x75, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x31, 0x33, 0x5f, 0x70, 0x62, 0x2e, 0x63, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x63, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63,
	0x65, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x7a,
	0x75, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x31, 0x33, 0x5f, 0x70, 0x62, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x69, 0x6e, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x63, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x03, 0x70,
	0x6f, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x6c,
	0x61, 0x6e, 0x65, 0x2e, 0x70, 0x31, 0x33, 0x5f, 0x70, 0x62, 0x2e, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x63, 0x65, 0x6c, 0x6c, 0x70, 0x6f, 0x73, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x0d, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x66, 0x6c, 0x61,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x46, 0x6c, 0x61,
	0x67, 0x22, 0x3a, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x63, 0x65, 0x6c, 0x6c,
	0x70, 0x6f, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x03, 0x72, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x22, 0x46, 0x0a,
	0x08, 0x64, 0x72, 0x6f, 0x70, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xf7, 0x02, 0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69,
	0x6e, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x09, 0x73, 0x68, 0x69, 0x70,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x7a,
	0x75, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x31, 0x33, 0x5f, 0x70, 0x62, 0x2e, 0x73, 0x68,
	0x69, 0x70, 0x69, 0x6e, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x08, 0x73, 0x68, 0x69,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x31,
	0x33, 0x5f, 0x70, 0x62, 0x2e, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x63, 0x65, 0x6c, 0x6c,
	0x70, 0x6f, 0x73, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x65, 0x70,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74,
	0x65, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x61, 0x7a, 0x75, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x31, 0x33, 0x5f, 0x70, 0x62,
	0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x11, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x6c, 0x61, 0x6e,
	0x65, 0x2e, 0x70, 0x31, 0x33, 0x5f, 0x70, 0x62, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x55,
	0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x6c, 0x6c, 0x65,
	0x74, 0x18, 0x08, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x22,
	0x38, 0x0a, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x69, 0x6e, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x68, 0x70, 0x5f, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x0d, 0x52, 0x06, 0x68, 0x70, 0x52, 0x61, 0x6e, 0x74, 0x22, 0x34, 0x0a, 0x0c, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x52, 0x0a, 0x08, 0x73, 0x63, 0x5f, 0x31, 0x33, 0x32, 0x30, 0x31, 0x12, 0x46, 0x0a, 0x0a, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x31, 0x33, 0x5f, 0x70,
	0x62, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x69,
	0x6c, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x16, 0x65, 0x78, 0x70, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2f, 0x66, 0x6c,
	0x79, 0x71, 0x69, 0x65, 0x2f, 0x62, 0x6c, 0x68, 0x78, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x62, 0x6c, 0x68, 0x78, 0x5f,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x31, 0x33, 0x5f, 0x70,
	0x62,
}

var (
	file_p13_pb_proto_rawDescOnce sync.Once
	file_p13_pb_proto_rawDescData = file_p13_pb_proto_rawDesc
)

func file_p13_pb_proto_rawDescGZIP() []byte {
	file_p13_pb_proto_rawDescOnce.Do(func() {
		file_p13_pb_proto_rawDescData = protoimpl.X.CompressGZIP(file_p13_pb_proto_rawDescData)
	})
	return file_p13_pb_proto_rawDescData
}

var file_p13_pb_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_p13_pb_proto_goTypes = []interface{}{
	(*Sc_13001)(nil),             // 0: azurlane.p13_pb.sc_13001
	(*Sc_13002)(nil),             // 1: azurlane.p13_pb.sc_13002
	(*Cs_13003)(nil),             // 2: azurlane.p13_pb.cs_13003
	(*Sc_13004)(nil),             // 3: azurlane.p13_pb.sc_13004
	(*Cs_13005)(nil),             // 4: azurlane.p13_pb.cs_13005
	(*Sc_13006)(nil),             // 5: azurlane.p13_pb.sc_13006
	(*Cs_13007)(nil),             // 6: azurlane.p13_pb.cs_13007
	(*Sc_13008)(nil),             // 7: azurlane.p13_pb.sc_13008
	(*Sc_13011)(nil),             // 8: azurlane.p13_pb.sc_13011
	(*Collectioninfo)(nil),       // 9: azurlane.p13_pb.collectioninfo
	(*Iteminfo)(nil),             // 10: azurlane.p13_pb.iteminfo
	(*Cs_13101)(nil),             // 11: azurlane.p13_pb.cs_13101
	(*Sc_13102)(nil),             // 12: azurlane.p13_pb.sc_13102
	(*Cs_13103)(nil),             // 13: azurlane.p13_pb.cs_13103
	(*Sc_13104)(nil),             // 14: azurlane.p13_pb.sc_13104
	(*Sc_13105)(nil),             // 15: azurlane.p13_pb.sc_13105
	(*Chapterinfo)(nil),          // 16: azurlane.p13_pb.chapterinfo
	(*Currentchapterinfo)(nil),   // 17: azurlane.p13_pb.currentchapterinfo
	(*Chaptercellinfo)(nil),      // 18: azurlane.p13_pb.chaptercellinfo
	(*Chaptercellpos)(nil),       // 19: azurlane.p13_pb.chaptercellpos
	(*Dropinfo)(nil),             // 20: azurlane.p13_pb.dropinfo
	(*Groupinchapter)(nil),       // 21: azurlane.p13_pb.groupinchapter
	(*Shipinchapter)(nil),        // 22: azurlane.p13_pb.shipinchapter
	(*Strategyinfo)(nil),         // 23: azurlane.p13_pb.strategyinfo
	(*Sc_13201)(nil),             // 24: azurlane.p13_pb.sc_13201
	(*ExpeditionDailyCount)(nil), // 25: azurlane.p13_pb.expedition_daily_count
}
var file_p13_pb_proto_depIdxs = []int32{
	16, // 0: azurlane.p13_pb.sc_13001.chapter_list:type_name -> azurlane.p13_pb.chapterinfo
	17, // 1: azurlane.p13_pb.sc_13001.current_chapter:type_name -> azurlane.p13_pb.currentchapterinfo
	9,  // 2: azurlane.p13_pb.sc_13002.collection_list:type_name -> azurlane.p13_pb.collectioninfo
	10, // 3: azurlane.p13_pb.sc_13006.drop_list:type_name -> azurlane.p13_pb.iteminfo
	9,  // 4: azurlane.p13_pb.sc_13006.new_collection:type_name -> azurlane.p13_pb.collectioninfo
	9,  // 5: azurlane.p13_pb.sc_13011.collection:type_name -> azurlane.p13_pb.collectioninfo
	17, // 6: azurlane.p13_pb.sc_13102.current_chapter:type_name -> azurlane.p13_pb.currentchapterinfo
	19, // 7: azurlane.p13_pb.sc_13104.move_path:type_name -> azurlane.p13_pb.chaptercellpos
	20, // 8: azurlane.p13_pb.sc_13104.drop_list:type_name -> azurlane.p13_pb.dropinfo
	18, // 9: azurlane.p13_pb.sc_13104.map_update:type_name -> azurlane.p13_pb.chaptercellinfo
	22, // 10: azurlane.p13_pb.sc_13104.ship_update:type_name -> azurlane.p13_pb.shipinchapter
	18, // 11: azurlane.p13_pb.sc_13105.map_update:type_name -> azurlane.p13_pb.chaptercellinfo
	18, // 12: azurlane.p13_pb.currentchapterinfo.cell_list:type_name -> azurlane.p13_pb.chaptercellinfo
	21, // 13: azurlane.p13_pb.currentchapterinfo.group_list:type_name -> azurlane.p13_pb.groupinchapter
	19, // 14: azurlane.p13_pb.chaptercellinfo.pos:type_name -> azurlane.p13_pb.chaptercellpos
	22, // 15: azurlane.p13_pb.groupinchapter.ship_list:type_name -> azurlane.p13_pb.shipinchapter
	19, // 16: azurlane.p13_pb.groupinchapter.pos:type_name -> azurlane.p13_pb.chaptercellpos
	23, // 17: azurlane.p13_pb.groupinchapter.strategy_list:type_name -> azurlane.p13_pb.strategyinfo
	23, // 18: azurlane.p13_pb.groupinchapter.strategy_use_list:type_name -> azurlane.p13_pb.strategyinfo
	25, // 19: azurlane.p13_pb.sc_13201.count_list:type_name -> azurlane.p13_pb.expedition_daily_count
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_p13_pb_proto_init() }
func file_p13_pb_proto_init() {
	if File_p13_pb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_p13_pb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sc_13001); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sc_13002); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cs_13003); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sc_13004); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cs_13005); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sc_13006); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cs_13007); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sc_13008); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sc_13011); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collectioninfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Iteminfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cs_13101); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sc_13102); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cs_13103); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sc_13104); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sc_13105); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chapterinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Currentchapterinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chaptercellinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chaptercellpos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dropinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Groupinchapter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shipinchapter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Strategyinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sc_13201); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_p13_pb_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpeditionDailyCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_p13_pb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_p13_pb_proto_goTypes,
		DependencyIndexes: file_p13_pb_proto_depIdxs,
		MessageInfos:      file_p13_pb_proto_msgTypes,
	}.Build()
	File_p13_pb_proto = out.File
	file_p13_pb_proto_rawDesc = nil
	file_p13_pb_proto_goTypes = nil
	file_p13_pb_proto_depIdxs = nil
}
